use_gpu: True
device: 0
early_stop:
  patience: 50
seed: 0
federate:
  mode: standalone
  method: fedgh
  client_num: 5
  total_round_num: 200
  sample_client_rate: 1.0
  make_global_eval: False
data:
  root: data/
  local_eval_whole_test_dataset: True #important! Whether the test dataset for each client is equivalent to the test dataset for the unsplit dataset
  type: 'CIFAR10@torchvision'
  splits: [1.0, 0.0, 0.0]
  num_workers: 0
  transform: [['ToTensor'], ['Normalize', {'mean': [0.4914, 0.4822, 0.4465], 'std': [0.2470, 0.2435, 0.2616]}]] #very import
  test_transform: [['ToTensor'], ['Normalize', {'mean': [0.4914, 0.4822, 0.4465], 'std': [0.2470, 0.2435, 0.2616]}]]
  args: [{'download': True}]
  splitter: 'lda'
  splitter_args: [{'alpha': 100.0}]
dataloader:
  batch_size: 256
model:
  dropout: 0.5
  out_channels: 10
  feature_dim: 512
  return_proto: True # important
train:
  local_update_steps: 1
  batch_or_epoch: epoch
  optimizer:
    type: Adam
    lr: 0.01
    weight_decay: 1e-4
FedGH:
  server_optimizer:
    type: Adam
    lr: 0.001
    weight_decay: 1e-4
criterion:
  type: CrossEntropyLoss
trainer:
  type: fedgh_trainer
grad:
  grad_clip: 5.0
eval:
  freq: 1
  metrics: ['acc']
  report : ['weighted_avg', 'avg']
  best_res_update_round_wise_key: test_acc
exp_name: 'TEMP_for_warpFC'
result_floder: model_heterogeneity/result/manual