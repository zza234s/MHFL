use_gpu: True
device: 0
early_stop:
  patience: 50
seed: 0
federate:
  mode: standalone
  method: fedpcl
  client_num: 5
  total_round_num: 200
  sample_client_rate: 1.0
  make_global_eval: False
fedpcl:
  debug: False
  show_verbose: False # Weather display verbose loss information
data:
  root: data/
  local_eval_whole_test_dataset: True #important! Whether the test dataset for each client is equivalent to the test dataset for the unsplit dataset
  type: 'SVHN@torchvision'
  transform: [['ToTensor']]
  test_transform: [['ToTensor']]
  args: [{'download': True}]
  splitter: 'lda'
  splitter_args: [{'alpha': 100.0}]
dataloader:
  batch_size: 256
train:
  local_update_steps: 1
  batch_or_epoch: epoch
  optimizer:
    type: Adam
    lr: 0.001
    weight_decay: 1e-4
criterion:
  type: CrossEntropyLoss
trainer:
  type: fedpcl_cv_trainer
grad:
  grad_clip: 5.0
model:
  type: CNN_3layers_proto
  out_channels: 10
  dropout: 0.
  hidden: 256
  filter_channels: [128,64,64]
  return_proto: True
eval:
  freq: 1
  metrics: ['acc','acc_based_on_local_prototype']
  report : ['weighted_avg', 'avg']
  best_res_update_round_wise_key: test_acc_based_on_local_prototype
